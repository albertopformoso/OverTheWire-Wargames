{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"OverTheWire - Wargames Solutions","text":"<p>Disclaimer: This repository contains solutions to the wargames from OverTheWire. The intent is to aid understanding and facilitate learning. Please approach these solutions ethically: try to solve the challenges independently first and use this repository as a reference or for insights.</p> <p>OverTheWire offers a variety of wargames designed to teach different aspects of security, ranging from basic UNIX/Linux commands in Bandit to more advanced topics in other games. Each game has its unique flavor and learning curve.</p>"},{"location":"#links","title":"Links","text":"<p> Wargame Solutions Bandit link <p></p>"},{"location":"bandit/","title":"Bandit","text":""},{"location":"bandit/#level-0","title":"Level 0","text":"<p>The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.</p> <pre><code>ssh bandit0@bandit.labs.overthewire.org -p 2220\n</code></pre> <p>Password: bandit0</p>"},{"location":"bandit/#level-0-level-1","title":"Level 0 \u2192 Level 1","text":"<p>The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.</p> <pre><code>cat readme\n</code></pre> <p>Output: NH2SXQwcBdpmTEzi3bvBHMM9H66vVXjL</p>"},{"location":"bandit/#level-1-level-2","title":"Level 1 \u2192 Level 2","text":"<p>The password for the next level is stored in a file called - located in the home directory</p> <pre><code>ssh bandit1@bandit.labs.overthewire.org -p 2220\n</code></pre> <p>Password: NH2SXQwcBdpmTEzi3bvBHMM9H66vVXjL</p> <pre><code>cat \"./-\"\n</code></pre> <p>Output: rRGizSaX8Mk1RTb1CNQoXTcYZWU6lgzi</p>"},{"location":"bandit/#level-2-level-3","title":"Level 2 \u2192 Level 3","text":"<p>The password for the next level is stored in a file called spaces in this filename located in the home directory</p> <pre><code>ssh bandit2@bandit.labs.overthewire.org -p 2220\n</code></pre> <p>Password: rRGizSaX8Mk1RTb1CNQoXTcYZWU6lgzi</p> <pre><code>cat \"./spaces in this filename\"\n</code></pre> <p>Output: aBZ0W5EmUfAf7kHTQeOwd8bauFJ2lAiG</p>"},{"location":"bandit/#level-3-level-4","title":"Level 3 \u2192 Level 4","text":"<p>The password for the next level is stored in a hidden file in the inhere directory.</p> <pre><code>ssh bandit3@bandit.labs.overthewire.org -p 2220\n</code></pre> <p>Password: aBZ0W5EmUfAf7kHTQeOwd8bauFJ2lAiG</p> <pre><code>ls -la\nls -la inhere/\ncat inhere/.hidden\n</code></pre> <p>Output: 2EW7BBsr6aMMoJ2HjW067dm8EgX26xNe</p>"},{"location":"bandit/#level-4-level-5","title":"Level 4 \u2192 Level 5","text":"<p>The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the \u201creset\u201d command.</p> <pre><code>ssh bandit4@bandit.labs.overthewire.org -p 2220\n</code></pre> <p>Password: 2EW7BBsr6aMMoJ2HjW067dm8EgX26xNe</p> <pre><code>find ./inhere -type f -exec file {} + | grep \"ASCII\"\n</code></pre> <pre><code>cat ./inhere/-file07\n</code></pre> <p>Output: lrIWWI6bB37kxfiCQZqUdOIYfr6eEeqR</p>"},{"location":"bandit/#level-5-level-6","title":"Level 5 \u2192 Level 6","text":"<p>The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:</p> <p>human-readable 1033 bytes in size not executable</p> <pre><code>ssh bandit5@bandit.labs.overthewire.org -p 2220\n</code></pre> <p>Password: lrIWWI6bB37kxfiCQZqUdOIYfr6eEeqR</p> <pre><code>find ./inhere -type f ! -executable -size 1033c\n</code></pre> <pre><code>cat ./inhere/maybehere07/.file2\n</code></pre> <p>Output: P4L4vucdmLnm8I7Vl7jG1ApGSfjYKqJU</p>"},{"location":"bandit/#level-6-level-7","title":"Level 6 \u2192 Level 7","text":"<p>The password for the next level is stored somewhere on the server and has all of the following properties:</p> <p>owned by user bandit7 owned by group bandit6 33 bytes in size</p> <pre><code>ssh bandit6@bandit.labs.overthewire.org -p 2220\n</code></pre> <p>Password: P4L4vucdmLnm8I7Vl7jG1ApGSfjYKqJU</p> <p><pre><code>find / -user bandit7 -group bandit6 -size 33c 2&gt;/dev/null\n</code></pre> Here's a breakdown of the command:</p> <ul> <li><code>/</code>: Start the search from the root directory.</li> <li><code>-user bandit7</code>: Look for files owned by the user bandit7.</li> <li><code>-group bandit6</code>: Look for files owned by the group bandit6.</li> <li><code>-size 33c</code>: Look for files that are 33 bytes in size. The c stands for bytes.</li> <li><code>2&gt;/dev/null</code>: This part of the command redirects all error messages (like \"Permission denied\") to /dev/null so that you only see valid results.</li> </ul> <pre><code>cat /var/lib/dpkg/info/bandit7.password\n</code></pre> <p>Output: z7WtoNQU2XfjmMtWA8u5rN4vzqu4v99S</p>"},{"location":"bandit/#level-7-level-8","title":"Level 7 \u2192 Level 8","text":"<p>The password for the next level is stored in the file data.txt next to the word millionth</p> <pre><code>ssh bandit7@bandit.labs.overthewire.org -p 2220\n</code></pre> <p>Password: z7WtoNQU2XfjmMtWA8u5rN4vzqu4v99S</p> <pre><code>cat data.txt | grep \"millionth\"\n</code></pre> <p>Output: millionth       TESKZC0XvTetK0S9xNwm25STk5iWrBvP</p>"},{"location":"bandit/#level-8-level-9","title":"Level 8 \u2192 Level 9","text":"<p>The password for the next level is stored in the file data.txt and is the only line of text that occurs only once</p> <p>The password for the next level is stored in the file data.txt next to the word millionth</p> <pre><code>ssh bandit8@bandit.labs.overthewire.org -p 2220\n</code></pre> <p>Password: TESKZC0XvTetK0S9xNwm25STk5iWrBvP</p> <pre><code>sort data.txt | uniq -u\n</code></pre> <p><code>uniq</code> flag <code>-u</code> displays only the unrepeated lines.</p> <p>Output: EN632PlfYiZbn3PhVK3XOGSlNInNE00t</p>"},{"location":"bandit/#level-9-level-10","title":"Level 9 \u2192 Level 10","text":"<p>The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u2018=\u2019 characters.</p> <pre><code>ssh bandit9@bandit.labs.overthewire.org -p 2220\n</code></pre> <p>Password: EN632PlfYiZbn3PhVK3XOGSlNInNE00t</p> stringsgrep <p>Use strings to extract readable strings</p> <p>The strings command in Linux is used to extract printable strings from a binary file. This is helpful when trying to locate human-readable content within such files.</p> <pre><code>strings data.txt | grep \"===\"\n</code></pre> <p>The -a option in grep allows it to process a binary file as if it were text. When dealing with files that might contain a mix of binary data and human-readable strings, the -a (or --text) option can be quite useful.</p> <p>Using grep -a \"===\" data.txt will search the file for lines containing the pattern ===, treating the file as text, regardless of its actual content. Given your level's goal, this command should be effective in identifying lines with several '=' characters, leading you to find the password.</p> <pre><code>grep -a \"===\" data.txt\n</code></pre> Output<pre><code>x]T========== theG)\"\n========== passwordk^\n========== is\n========== G7w8LIi6J3kTb8A7j9LgrywtEUlyyp6s\n</code></pre>"},{"location":"bandit/#level-10-level-11","title":"Level 10 \u2192 Level 11","text":"<p>The password for the next level is stored in the file data.txt, which contains base64 encoded data</p> <pre><code>ssh bandit10@bandit.labs.overthewire.org -p 2220\n</code></pre> <p>Password: G7w8LIi6J3kTb8A7j9LgrywtEUlyyp6s</p> <pre><code>base64 --decode data.txt\n</code></pre> <p>Output: 6zPeziLdR2RKNdNYFNb6nVCKzphlXHBM</p>"},{"location":"bandit/#level-11-level-12","title":"Level 11 \u2192 Level 12","text":"<p>The password for the next level is stored in the file data.txt, where all lowercase (a-z) and uppercase (A-Z) letters have been rotated by 13 positions</p> <pre><code>ssh bandit11@bandit.labs.overthewire.org -p 2220\n</code></pre> <p>Password: 6zPeziLdR2RKNdNYFNb6nVCKzphlXHBM</p> <pre><code>cat data.txt | tr '[a-z][A-Z]' '[n-za-m][N-ZA-M]'\n</code></pre> <p>Output: The password is JVNBBFSmZwKKOP0XbFXOoW8chDz5yVRv</p>"},{"location":"bandit/#level-12-level-13","title":"Level 12 \u2192 Level 13","text":"<p>The password for the next level is stored in the file data.txt, which is a hexdump of a file that has been repeatedly compressed. For this level it may be useful to create a directory under /tmp in which you can work using mkdir. For example: mkdir /tmp/myname123. Then copy the datafile using cp, and rename it using mv (read the manpages!)</p> <pre><code>ssh bandit12@bandit.labs.overthewire.org -p 2220\n</code></pre> <p>Password: JVNBBFSmZwKKOP0XbFXOoW8chDz5yVRv</p> <pre><code>cd /tmp\nmktemp -d\n</code></pre> <p>Output: /tmp/tmp.KC62y3y5gx</p> <pre><code>cd tmp.KC62y3y5gx\ncp ~/data.txt .\nmv data.txt data.hex_dump\n</code></pre> <p>Use <code>xxd</code> to revert the hexdump:</p> <pre><code>xxd -r data.hex_dump data.bin\n</code></pre> <p>Use the <code>file</code> command to identify the file type: <pre><code>file data.bin\n</code></pre></p> <p>Output: data.bin: gzip compressed data, was \"data2.bin\", last modified: Thu Oct  5 06:19:20 2023, max compression, from Unix, original size modulo 2^32 573</p> <pre><code>mv data.bin data.gz\ngzip -d data.gz\nls\n</code></pre> <p>Output: data  data.hex_dump</p> <p>Use the <code>file</code> command to identify the file type: <pre><code>file data\n</code></pre></p> <p>Output: data: bzip2 compressed data, block size = 900k</p> <pre><code>mv data data.bz2\nbzip2 -d data.bz2\nfile data\n</code></pre> <p>Output: data: gzip compressed data, was \"data4.bin\", last modified: Thu Oct  5 06:19:20 2023, max compression, from Unix, original size modulo 2^32 20480</p> <pre><code>mv data data.gz\ngzip -d data.gz\nfile data\n</code></pre> <p>Outpu: data: POSIX tar archive (GNU)</p> <pre><code>mv data data.tar\ntar -xf data.tar\nls\n</code></pre> <p>Output: data5.bin  data.hex_dump  data.tar</p> <pre><code>file data5.bin\n</code></pre> <p>Output: data5.bin: POSIX tar archive (GNU)</p> <pre><code>tar -xf data5.bin\nls\n</code></pre> <p>Output: data5.bin  data6.bin  data.hex_dump  data.tar</p> <pre><code>file data6.bin\n</code></pre> <p>Output: data6.bin: bzip2 compressed data, block size = 900k</p> <pre><code>bzip2 -d data6.bin\nfile data6.bin.out\n</code></pre> <p>Output: data6.bin.out: POSIX tar archive (GNU)</p> <pre><code>tar -xf data6.bin.out\nls\n</code></pre> <p>Output: data5.bin  data6.bin.out  data8.bin  data.hex_dump  data.tar</p> <pre><code>file data8.bin\n</code></pre> <p>Output: data8.bin: gzip compressed data, was \"data9.bin\", last modified: Thu Oct  5 06:19:20 2023, max compression, from Unix, original size modulo 2^32 49</p> <pre><code>mv data8.bin data8.gz\ngzip -d data8.gz\nfile data8\n</code></pre> <p>Output: data8: ASCII text</p> <pre><code>cat data8\n</code></pre> <p>Output: The password is wbWdlBxEir4CaE8LaPhauuOo6pwRmrDw</p>"},{"location":"bandit/#level-13-level-14","title":"Level 13 \u2192 Level 14","text":"<p>The password for the next level is stored in /etc/bandit_pass/bandit14 and can only be read by user bandit14. For this level, you don\u2019t get the next password, but you get a private SSH key that can be used to log into the next level. Note: localhost is a hostname that refers to the machine you are working on</p> <pre><code>scp -P 2220 bandit13@bandit.labs.overthewire.org:~/sshkey.private .\n</code></pre> <p>Password: wbWdlBxEir4CaE8LaPhauuOo6pwRmrDw</p> <p>You should have the <code>sshkey.private</code> on your local directory</p>"},{"location":"bandit/#level-14-level-15","title":"Level 14 \u2192 Level 15","text":"<p>The password for the next level can be retrieved by submitting the password of the current level to port 30000 on localhost.</p> <pre><code>ssh bandit14@bandit.labs.overthewire.org -p 2220 -i sshkey.private\n</code></pre> <p>Note</p> <p>If you get <code>WARNING: UNPROTECTED PRIVATE KEY FILE!</code> message. This can be easy fix by changing ssh key permisions:</p> <pre><code>chmod 600 sshkey.private\n</code></pre> <pre><code>cat /etc/bandit_pass/bandit14\n</code></pre> <p>Output: fGrHPx402xGC7U7rXKDaxiWFTOiF0ENq</p> <pre><code>nc 127.0.0.1 30000\n</code></pre> <p>Input: fGrHPx402xGC7U7rXKDaxiWFTOiF0ENq</p> Output<pre><code>Correct!\njN2kgmIXJ6fShzhT2avhotn4Zcka6tnt\n</code></pre>"},{"location":"bandit/#level-15-level-16","title":"Level 15 \u2192 Level 16","text":"<p>The password for the next level can be retrieved by submitting the password of the current level to port 30001 on localhost using SSL encryption.</p> <p>Helpful note: Getting \u201cHEARTBEATING\u201d and \u201cRead R BLOCK\u201d? Use -ign_eof and read the \u201cCONNECTED COMMANDS\u201d section in the manpage. Next to \u2018R\u2019 and \u2018Q\u2019, the \u2018B\u2019 command also works in this version of that command\u2026</p> <pre><code>ssh bandit15@bandit.labs.overthewire.org -p 2220\n</code></pre> <p>Password: jN2kgmIXJ6fShzhT2avhotn4Zcka6tnt</p> <pre><code>echo \"jN2kgmIXJ6fShzhT2avhotn4Zcka6tnt\" | openssl s_client -ign_eof -connect 127.0.0.1:30001\n</code></pre> Output<pre><code>Correct!\nJQttfApK4SeyHwDlI9SXGR50qclOAil1\n\nclosed\n</code></pre>"},{"location":"bandit/#level-16-level-17","title":"Level 16 \u2192 Level 17","text":"<p>The credentials for the next level can be retrieved by submitting the password of the current level to a port on localhost in the range 31000 to 32000. First find out which of these ports have a server listening on them. Then find out which of those speak SSL and which don\u2019t. There is only 1 server that will give the next credentials, the others will simply send back to you whatever you send to it.</p> <pre><code>ssh bandit16@bandit.labs.overthewire.org -p 2220\n</code></pre> <p>Password: JQttfApK4SeyHwDlI9SXGR50qclOAil1</p> <pre><code>nmap -sV 127.0.0.1 -p 31000-32000\n</code></pre> Output<pre><code>Starting Nmap 7.80 ( https://nmap.org ) at 2023-10-26 00:08 UTC\nNmap scan report for localhost (127.0.0.1)\nHost is up (0.00013s latency).\nNot shown: 996 closed ports\nPORT      STATE SERVICE     VERSION\n31046/tcp open  echo\n31518/tcp open  ssl/echo\n31691/tcp open  echo\n31790/tcp open  ssl/unknown\n31960/tcp open  echo\n</code></pre> <pre><code>echo 'JQttfApK4SeyHwDlI9SXGR50qclOAil1' | openssl s_client -ign_eof -connect 127.0.0.1:31790\n</code></pre> <p>It will output the private ssh key, you should copy and paste it to your local machine.</p>"},{"location":"bandit/#level-17-level-18","title":"Level 17 \u2192 Level 18","text":"<p>There are 2 files in the homedirectory: passwords.old and passwords.new. The password for the next level is in passwords.new and is the only line that has been changed between passwords.old and passwords.new</p> <p>NOTE: if you have solved this level and see \u2018Byebye!\u2019 when trying to log into bandit18, this is related to the next level, bandit19</p> <pre><code>ssh ssh -i ./sshkey17.private bandit17@bandit.labs.overthewire.org -p 2220\n</code></pre> <p>Note</p> <p>If you get <code>WARNING: UNPROTECTED PRIVATE KEY FILE!</code> message. This can be easy fix by changing ssh key permisions:</p> <pre><code>chmod 600 sshkey.private\n</code></pre> <pre><code>diff passwords.new passwords.old\n</code></pre> Output<pre><code>&lt; hga5tuuCLF6fFzUpnagiMN8ssu9LFrdg\n---\n&gt; p6ggwdNHncnmCNxuAt0KtKVq185ZU7AW\n</code></pre> <p>Since I wrote <code>paswords.new</code> on the first position, the password is <code>hga5tuuCLF6fFzUpnagiMN8ssu9LFrdg</code> </p>"},{"location":"bandit/passwords/","title":"Passwords","text":"<p> Level Password Level 0 bandit0 Level 0 \u2192 Level 1 NH2SXQwcBdpmTEzi3bvBHMM9H66vVXjL Level 1 \u2192 Level 2 rRGizSaX8Mk1RTb1CNQoXTcYZWU6lgzi Level 2 \u2192 Level 3 aBZ0W5EmUfAf7kHTQeOwd8bauFJ2lAiG Level 3 \u2192 Level 4 2EW7BBsr6aMMoJ2HjW067dm8EgX26xNe Level 4 \u2192 Level 5 lrIWWI6bB37kxfiCQZqUdOIYfr6eEeqR Level 5 \u2192 Level 6 P4L4vucdmLnm8I7Vl7jG1ApGSfjYKqJU Level 6 \u2192 Level 7 z7WtoNQU2XfjmMtWA8u5rN4vzqu4v99S Level 7 \u2192 Level 8 TESKZC0XvTetK0S9xNwm25STk5iWrBvP Level 8 \u2192 Level 9 EN632PlfYiZbn3PhVK3XOGSlNInNE00t Level 9 \u2192 Level 10 G7w8LIi6J3kTb8A7j9LgrywtEUlyyp6s Level 10 \u2192 Level 11 6zPeziLdR2RKNdNYFNb6nVCKzphlXHBM Level 11 \u2192 Level 12 JVNBBFSmZwKKOP0XbFXOoW8chDz5yVRv Level 12 \u2192 Level 13 wbWdlBxEir4CaE8LaPhauuOo6pwRmrDw Level 13 \u2192 Level 14 nan Level 14 \u2192 Level 15 jN2kgmIXJ6fShzhT2avhotn4Zcka6tnt Level 15 \u2192 Level 16 JQttfApK4SeyHwDlI9SXGR50qclOAil1 Level 16 \u2192 Level 17 nan Level 17 \u2192 Level 18 hga5tuuCLF6fFzUpnagiMN8ssu9LFrdg <p></p>"}]}